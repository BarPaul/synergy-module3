# –ò–º–ø–æ—Ä—Ç –Ω—É–∂–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫/–ø–∞–∫–µ—Ç–æ–≤
from telebot import TeleBot
from hunt import generate_reward, generate_message, convert_inventory
from seller import generate_trade
from config import *


# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –±–æ—Ç–∞
bot = TeleBot(TOKEN, 'html')


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_command(message: types.Message):
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–∏—Å—É—Ç—Å–≤—É–µ—Ç –≤ –¥–∞—Ç–∞–±–∞–∑–µ
    if db.is_new(message.from_user.id):
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –∫–Ω–æ–ø–æ–∫ –¥–∞ –∏ –Ω–µ—Ç
        YES.callback_data = "yes_start"
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –∫–Ω–æ–ø–æ–∫ –¥–∞ –∏ –Ω–µ—Ç
        NO.callback_data = "no_start"
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–æ–∫ –¥–∞ –∏ –Ω–µ—Ç
        YES.text, NO.text = "–î–∞", "–ù–µ—Ç"
        # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π "–î–∞ –ù–µ—Ç" –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏
        return bot.reply_to(message, "üë¥: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –ø—É—Ç–Ω–∏–∫! –ù–µ –∑–∞–±–ª—É–¥–∏–ª—Å—è –ª–∏ —Ç—ã?", reply_markup=YN)
    # –ï—Å–ª–∏ —É–∂–µ –Ω–µ –Ω–æ–≤–∏—á–µ–∫, –æ—Ç–≤–µ—á–∞—Ç—å, —á—Ç–æ —ç—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ
    bot.reply_to(message, IMPOSSIBLE)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@bot.message_handler(func=lambda message: message.text in MAIN_BUTTONS)
def menu_command(message: types.Message):
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "–Ω–æ–≤–∏—á–µ–∫", –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
    if db.is_new(message.from_user.id):
        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –æ—Ç–≤–µ—Ç–æ–º "–û —á–µ–º –≤—ã –ø—É—Ç–Ω–∏–∫?"
        return bot.reply_to(message, "–û —á–µ–º –≤—ã –ø—É—Ç–Ω–∏–∫?")
    # –ü–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –∏–∑ –¥–∞—Ç–∞–±–∞–∑—ã SQLITE3
    inv = db.get_inventory(message.from_user.id)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    if message.text == "‚õèÔ∏è –ü—É—Å—Ç—ã–Ω–Ω–∞—è –æ—Ö–æ—Ç–∞":
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∫–≤–µ—Å—Ç–∞
        mes = generate_message()
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –∫–Ω–æ–ø–æ–∫ –¥–∞ –∏ –Ω–µ—Ç
        NO.callback_data, YES.callback_data = mes['no'], mes['yes']
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–æ–∫ –¥–∞ –∏ –Ω–µ—Ç
        NO.text, YES.text = mes.get("no_text", "–ù–µ—Ç"), mes.get("yes_text", "–î–∞")
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        YN.keyboard[0] = [YES, NO]
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.reply_to(message, mes['text'], reply_markup=YN)
    # –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ "–¢–æ—Ä–≥–æ–≤–µ—Ü"
    elif message.text == "üõí –¢–æ—Ä–≥–æ–≤–µ—Ü":
        # –ï—Å–ª–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç
        if inv is None:
            # –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
            return bot.reply_to(message, "–£ —Ç–µ–±—è –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –æ–±–º–µ–Ω–∞")
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        data = generate_trade(inv)
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–Ω—è—Ç—å
        YES_TRADE.callback_data = f"trade_accept_{data['need_material']}_{data['need_count']}_{data['sell_material']}_{data['sell_count']}"
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
        TRADE.keyboard[0][-1] = YES_TRADE
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
        bot.reply_to(message, data['text'], reply_markup=TRADE if data['is_right'] else None)
    # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–¢–µ–ª–µ—Ñ–æ–Ω"
    elif message.text == "üì± –¢–µ–ª–µ—Ñ–æ–Ω":
        # –ï—Å–ª–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç
        if inv is None:
            # –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å None –≤ –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å
            inv = {}
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.reply_to(message, "–¢–µ–±–µ –Ω—É–∂–µ–Ω —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–ø–∞—Å–µ–Ω–∏—è\n" + '\n'.join(
                [f'{line.split()[0]} {str(inv.get(key, 0))}/{line.split()[-1]} {"‚úÖ" if inv.get(key, 0) >= REQUIREMENTS[key] else "‚ùå"}' 
                for line, key in zip(convert_inventory(REQUIREMENTS).split("\n"), REQUIREMENTS.keys())]
            ), reply_markup=END_MARKUP if all([REQUIREMENTS[key] <= inv.get(key, 0) for key in REQUIREMENTS.keys()]) else None
        )
    # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å"
    elif message.text == "üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å":
        # –ï—Å–ª–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç
        if inv is None:
            # –°–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± —ç—Ç–æ–º –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
            return bot.reply_to(message, "–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å\n–ü—É—Å—Ç :(")
        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º
        bot.reply_to(message, "–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å\n" + convert_inventory(inv))


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö –∫–Ω–æ–ø–æ–∫ "–î–∞" (–ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏–∏)
@bot.callback_query_handler(func=lambda c: c.data.split('_')[0] in ['no', 'yes'] and len(c.data.split("_")) == 2)
def start_callback(call: types.CallbackQuery):
    # –ï—Å–ª–∏ —É–∂–µ –Ω–µ –Ω–æ–≤–∏—á–µ–∫
    if not db.is_new(call.message.from_user.id):
        # –°–∫–∞–∑–∞—Ç—å, —á—Ç–æ —ç—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
        return bot.reply_to(call.message, IMPOSSIBLE)
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞ –∏–ª–∏ –Ω–µ—Ç –∏ –≤ –∫–∞–∫–æ–º –º–µ—Å—Ç–µ
    do, _type = call.data.split("_")
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –∞–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —á–∞—Ç–∞
    mid, cid = call.message.id, call.message.chat.id
    # –ï—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ—Ç –∏ —ç—Ç–æ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ –∏ –∫ —Ö—Ä–∞–º—É
    if do == "no" and _type in ['start', 'temple']:
        # –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ "–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏" –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
        return bot.edit_message_text(f"{LOSE}\n–°—Ç–∞—Ä–∏–∫ —á—É–¥–µ—Å–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∏—Å–ø–∞—Ä–∏–ª—Å—è –∏ –≤—ã –ø–æ–≥–∏–±–ª–∏ –æ—Ç –∂–∞–∂–¥—ã, —Ç–∞–∫ –∫–∞–∫ –æ—Å—Ç–∞–ª–∏—Å—å –ª–µ–∂–∞—Ç—å –Ω–∞ –ø–µ—Å–∫–µ\n(–Ω–∞—á–∞—Ç—å –∏–≥—Ä—É —Å–Ω–æ–≤–∞ /start)", cid, mid, reply_markup=None)
    # –ï—Å–ª–∏ —ç—Ç–æ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ
    if _type == "start":
            # –∏–∑–º–µ–Ω–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –∫–Ω–æ–ø–æ–∫ –¥–∞ –∏ –Ω–µ—Ç (–¥–ª—è —Å–º–µ–Ω—ã –ª–æ–∫–∞—Ü–∏–∏)
            NO.callback_data, YES.callback_data = "no_temple", "yes_temple"
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            YN.keyboard[0] = [YES, NO]
            # –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ
            bot.edit_message_text("üë¥: –ü—Ä–æ–π–¥–∏ –≤ –ø—É—Å—Ç—ã–Ω–Ω—ã–π —Ö—Ä–∞–º. –û–Ω —É–∫–∞–∂–µ—Ç —Ç–µ–±–µ –ø—É—Ç—å", cid, mid, reply_markup=YN)
    # –ï—Å–ª–∏ –æ–∫–æ–ª–æ —Ö—Ä–∞–º–∞
    elif _type == "temple":
            # –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
            bot.edit_message_text("–í—ã –≤–æ—à–ª–∏ –≤ –¥—Ä–µ–≤–Ω–∏–π —Ö—Ä–∞–º. ", cid, mid, reply_markup=None)
            # –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ–º —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
            bot.reply_to(call.message, "–î–æ–≤–æ–ª—å–Ω–æ —Å—Ç—Ä–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ, –Ω–æ –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ –∑–∞–ø–∞—Å—ã –≤–æ–¥—ã, –ø–∏—â–∏ –∏ –æ–¥–∏—á–∞–ª—ã–π —Ç–æ—Ä–≥–æ–≤–µ—Ü", reply_markup=MAIN_MENU)
            # –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –¥–∞—Ç–∞–±–∞–∑—É
            db.insert_user(call.from_user.id)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –Ω–∞ –æ—Ö–æ—Ç–µ
@bot.callback_query_handler(func=lambda c: len(c.data.split("_")) == 3 and c.data.split("_")[0] in ['yes', 'no'])
def history_callback(call: types.CallbackQuery):
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞, –∞–π–¥–∏ –∏ —Å–∞–º–æ –¥–µ–π—Å—Ç–≤–∏–µ, —Ç–∞–∫–∂–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –∞–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —á–∞—Ç–∞
    [_type, tid, do], mid, cid = call.data.split("_"), call.message.id, call.message.chat.id
    # –ï—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–∏–≥—Ä–∞—Ç—å
    if do == "0":
        # –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ —Å –ø—Ä–∏—á–∏–Ω–æ–π
        bot.edit_message_text(f"{LOSE}\n{HUNT_MESSAGES[int(tid)]['lose_text']}\n(–ù–∞—á–∞—Ç—å –∏–≥—Ä—É —Å–Ω–æ–≤–∞ /start)", cid, mid, reply_markup=None)
        # –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥–∞—Ç–∞–±–∞–∑—ã
        db.delete_user(call.from_user.id)
    # –ï—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    elif do == "1":
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        message = HUNT_MESSAGES[int(tid)][f'{_type}_response']
        # –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        bot.edit_message_text(message, cid, mid, reply_markup=None)
    # –ï—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–∑–æ–º
    elif do == "2":
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        message = HUNT_MESSAGES[int(tid)][f'{_type}_response']
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞–≥—Ä–∞–¥—ã
        reward = generate_reward()
        # –ï—Å–ª–∏ –Ω–∞–≥—Ä–∞–¥—ã –Ω–µ—Ç
        if reward is None:
            # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Å "–ù–∏—á–µ–≥–æ" –∏ –æ–∫–æ–Ω—á–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
            return bot.edit_message_text(message.format("–ù–∏—á–µ–≥–æ :("), cid, mid, reply_markup=None)
        # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Å –ø—Ä–∏–∑–æ–º
        bot.edit_message_text(message.format(convert_inventory(reward)), cid, mid, reply_markup=None)
        # –¶–∏–∫–ª –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –Ω–∞–≥—Ä–∞–¥–µ
        for k, v in reward.items():
            # –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
            db.add_item(call.from_user.id, k, v)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω"
@bot.callback_query_handler(func=lambda c: c.data == "game_end")
def game_end_callback(call: types.CallbackQuery):
    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –∏–≥—Ä—ã
    bot.reply_to(call.message, END_GAME)
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –æ –∫—Ä–∞—Ñ—Ç–µ
    bot.delete_message(call.message.chat.id, call.message.id)
    # –£–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥–∞—Ç–∞–±–∞–∑—ã
    db.delete_user(call.from_user.id)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û—Ç–∫–ª–æ–Ω–∏—Ç—å —Ç—Ä–µ–π–¥"
@bot.callback_query_handler(func=lambda c: c.data == "trade_decline")
def decline_trade(call: types.CallbackQuery):
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç—Ä–µ–π–¥–µ
    bot.delete_message(call.message.chat.id, call.message.id)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏–Ω—è—Ç—å —Ç—Ä–µ–π–¥"
@bot.callback_query_handler(func=lambda c: c.data.startswith("trade_accept"))
def accept_trade(call: types.CallbackQuery):
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏–≥—Ä–æ–∫–∞
    inv = db.get_inventory(call.from_user.id)
    # –ï—Å–ª–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç
    if inv is None:
        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º
        return bot.reply_to(call.message, "–£ —Ç–µ–±—è –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –æ–±–º–µ–Ω–∞")
    # –ü–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω—É–∂–Ω–æ–º –º–∞—Ç–µ—Ä–∏–∞–ª–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ, –∞ —Ç–∞–∫–∂–µ –æ –º–∞—Ç–µ—Ä–∏–∞–ª–µ, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∞–µ–º –∏–∑ call.data
    need, need_count, sell, sell_count = call.data.split("_")[2:]
    # –ï—Å–ª–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑–º–µ–Ω–∏–ª—Å—è
    if int(need_count) > inv.get(need, 0):
        # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±–æ–ª–µ–µ –Ω–µ–∞–∫—É—Ç–∞–ª—å–Ω–æ
        bot.reply_to(call.message, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω–æ")
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
        return bot.delete_message(call.message.chat.id, call.message.id)
    # "–û—Ç–¥–∞–µ–º" –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    db.rem_item(call.from_user.id, need, int(need_count))
    # "–û—Ç–¥–∞–µ–º" –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    db.add_item(call.from_user.id, sell, int(sell_count))
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç—Ä–µ–π–¥–µ
    bot.delete_message(call.message.chat.id, call.message.id)


# –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é, –∞ –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è
if __name__ == '__main__':
    # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è/–æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö Telegram
    bot.infinity_polling()
